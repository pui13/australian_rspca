mutate(area_percent = calls/sum(calls)*100) %>%
group_by(area) %>%
arrange(desc(area)) %>%
head(12)
brisbane %>%
filter(!is.na(category),
!is.na(area))%>%
group_by(area, category) %>%
summarise(calls = n()) %>%
ungroup(category) %>%
mutate(area_percent = calls/sum(calls)*100) %>%
group_by(area) %>%
arrange(desc(area_percent)) %>%
head(12)
brisbane %>%
filter(!is.na(category),
!is.na(area))%>%
group_by(area, category) %>%
summarise(calls = n()) %>%
ungroup(category) %>%
mutate(area_percent = calls/sum(calls)*100) %>%
arrange(desc(area_percent)) %>%
head(12)
unique(brisbane$area)
brisbane %>%
filter(!is.na(category),
!is.na(area))%>%
group_by(area, category) %>%
summarise(calls = n()) %>%
ungroup(category) %>%
mutate(area_percent = calls/sum(calls)*100) %>%
arrange(desc(area_percent)) %>%
head(10)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(fable)
library(tsibble)
library(lubridate)
library(zoo)
animals <- read_csv("clean_data/animals_clean.csv")
brisbane <- read_csv("clean_data/brisbane.csv")
townsville <- read_csv("clean_data/townsville.csv")
bind_townsville_brisbane <- read_csv("clean_data/bind_townsville_brisbane.csv")
glimpse(animals)
animals %>%
group_by(animal_type) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
arrange(desc(total))
animals %>%
group_by(region) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
arrange(desc(total))
glimpse(townsville)
townsville %>%
group_by(animal_type) %>%
summarise(calls = n())
townsville %>%
group_by(suburb) %>%
summarise(calls = n()) %>%
arrange(desc(calls)) %>%
head()
glimpse(brisbane)
brisbane %>%
group_by(animal_type) %>%
summarise(calls = n())
brisbane %>%
group_by(suburb) %>%
summarise(calls = n()) %>%
arrange(desc(calls)) %>%
head()
animals %>%
filter(year > 2013) %>%
group_by(region, animal_type) %>%
summarise(total = sum(region_total)) %>%
ungroup() %>%
group_by(region) %>%
mutate(region_percent = total/sum(total) *100) %>%
ggplot(aes(region, region_percent, fill = region)) +
geom_col() +
facet_wrap(~ animal_type) +
theme_minimal() +
labs(title = "Animal Group % Intake Per Region (2014-18) ",
y = "Regional Percentage",
fill = "Region") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
animals %>%
filter(year > 2013) %>%
group_by(region, animal_type) %>%
summarise(avg_total = sum(region_total)/5) %>%
ungroup() %>%
group_by(region) %>%
mutate(region_percent = avg_total/sum(avg_total) *100) %>%
filter(animal_type == "Wildlife") %>%
ggplot(aes(region, region_percent, fill = region)) +
geom_col() +
labs( y = "Percentage of Region Intake",
title = "Wildlife Intake - 2014-18 Average",
fill = "Region") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
animals %>%
group_by(region, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ggplot(aes(year, total, colour = region)) +
geom_line() +
geom_point() +
labs(title = "Number of Animals Received",
x = "Year",
y = " Total",
colour = "Region") +
theme_minimal()
animals %>%
filter(year > 2004, region == "Queensland") %>%
group_by(animal_type, year) %>%
summarise(total = sum(region_total)) %>%
ggplot(aes(year, total, colour = animal_type)) +
geom_line() +
geom_point() +
theme_minimal() +
labs( title = "Queensland's Yearly Animal Intake",
x = "Year",
y = "Total",
colour = "Category")
animals %>%
filter(animal_type == "Wildlife",
year %in% c(2011, 2018),
region == "Queensland") %>%
group_by(year) %>%
summarise(total = sum(region_total)) %>%
mutate(percent_increase = (total-8312)/8312 * 100)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ggplot(aes(year, total, colour = outcome)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Outcome for All Animals Received",
x = "Year",
y = "Total",
colour = "Outcome")
animals %>%
group_by(outcome, year, region) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ungroup() %>%
group_by(year, region) %>%
mutate(region_percent = total/sum(total)*100) %>%
ggplot(aes(year, region_percent, colour = region)) +
geom_line() +
facet_wrap(~outcome, scales = "free_y")
animals %>%
group_by(outcome,year, region) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ungroup() %>%
group_by(year, region) %>%
mutate(region_percent = total/sum(total)*100) %>%
filter(outcome == "Euthanized") %>%
ggplot(aes(year, region_percent, colour = region)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Euthanized Percentage Per Region",
x = "Year",
y = "Region Percentage",
colour = "Region")
animals %>%
group_by(outcome,year, region) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ungroup() %>%
group_by(year, region) %>%
mutate(region_percent = total/sum(total)*100) %>%
filter(outcome == "Rehomed") %>%
ggplot(aes(year, region_percent, colour = region)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Rehomed Percentage Per Region",
x = "Year",
y = "Region Percentage",
colour = "Region")
animals %>%
group_by(outcome,year, region) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
ungroup() %>%
group_by(year, region) %>%
mutate(region_percent = total/sum(total)*100) %>%
filter(outcome == "Reclaimed") %>%
ggplot(aes(year, region_percent, colour = region)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Reclaimed Percentage Per Region",
x = "Year",
y = "Region Percentage",
colour = "Region")
townsville %>%
group_by(date_range) %>%
summarise(calls = n()) %>%
mutate(apr_sept = ifelse(month(date_range) %in% c(4:9),T,F)) %>%
ggplot(aes(date_range, calls, colour = apr_sept, group = 1)) +
geom_line() +
geom_point() +
scale_colour_manual(labels = c("Oct-Mar", "Apr-Sept"),
values = c("red", "blue")) +
theme_minimal() +
labs(title = "Townsville Monthly Calls",
x = "Year",
y = "Call Volume",
colour = "")
townsville %>%
mutate(season = ifelse(month(date_range) %in% c(4:9),"cold","hot"),
year = year(date_range)) %>%
filter(year != 2013) %>%
group_by(year, season) %>%
summarise(calls = n()) %>%
group_by(year) %>%
pivot_wider(names_from = season, values_from = calls) %>%
mutate(percentage_increase = (cold-hot)/hot *100) %>%
select(year, percentage_increase)
brisbane %>%
group_by(date_range) %>%
summarise(calls = n()) %>%
ggplot(aes(date_range, calls)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Brisbane Quarterly Calls",
x = "Year",
y = "Call Volume")
townsville_calls <- townsville %>%
group_by(date_range) %>%
summarise(calls = n()) %>%
mutate(date_range = yearmonth(as.character(date_range))) %>%
as_tsibble()
townsville_calls %>%
autoplot(calls)
fit <- townsville_calls %>%
model(
snaive = SNAIVE(calls),
arima = ARIMA(calls)
)
forecast_arima <- fit %>%
select(arima) %>%
fabletools::forecast(h = 12)
forecast_snaive  <- fit %>%
select(snaive) %>%
fabletools::forecast(h = 12)
forecast_arima %>%
autoplot(townsville_calls, level = 95) +
labs(title = "ARIMA forecast for Townsville call volume",
x = "Year",
y = "Calls",
level = "Prediction Interval %")
forecast_snaive %>%
autoplot(townsville_calls, level = 95) +
labs(title = "SNAIVE forecast for Townsville call volume",
x = "Year",
y = "Calls",
level = "Prediction Interval %")
# setting training data
train <- townsville_calls %>%
filter_index("2013 October" ~ "2019 June")
# run model on training set
fit_train <- train %>%
model(
snaive = SNAIVE(calls),
arima = ARIMA(calls)
)
# forecast from training set
forecast_test <- fit_train %>%
fabletools::forecast(h = 12)
# plot against actual values
forecast_test %>%
autoplot(train, level = NULL) +
autolayer(filter_index(townsville_calls, "2019 July" ~ .), colour = "black") +
labs (title = "Forecasts for call volumes",
x = "Year",
y = "Calls")
fabletools::accuracy(forecast_test, townsville_calls)
best_model <- forecast_arima %>%
autoplot(townsville_calls, level = 95) +
labs(title = "ARIMA forecast for Townsville call volume",
x = "Year",
y = "Calls",
level = "Prediction Interval %") +
theme_minimal()
best_model
bind_townsville_brisbane %>%
filter(!is.na(animal_type)) %>%
group_by(animal_type) %>%
summarise(calls = n(),
percentage_of_calls = n()/nrow(bind_townsville_brisbane)*100) %>%
arrange(desc(calls))
# filtered out before 2016 Q1 onwards as brisbane data starts from that quarter
bind_townsville_brisbane %>%
filter(qtr >= as.yearqtr("2016 Q1"),
!is.na(animal_type)) %>%
group_by(animal_type, qtr) %>%
summarise(calls = n()) %>%
ggplot(aes(qtr, calls, colour = animal_type, group = 1)) +
geom_line() +
labs(title = "Brisbane & Townsville Complaint Calls",
x = "Year",
y = "Calls",
colour = "Animal Type") +
theme_minimal()
brisbane %>%
filter(!is.na(category),
!is.na(area))%>%
group_by(area, category) %>%
summarise(calls = n()) %>%
ungroup(category) %>%
mutate(area_percent = calls/sum(calls)*100) %>%
arrange(desc(area_percent)) %>%
head(10)
library(tidyverse)
library(tidyverse)
ani <- read_csv("raw_data/animal_outcomes.csv")
bri <- read_csv("raw_data/brisbane_complaints.csv")
twn <- read_csv("raw_data/animal_complaints.csv")
glimpse(ani)
glimpse(ani)
is.double(ani)
ani %>%
filter(is.double())
glimpse(ani)
glimpse(twn)
glimpse(bri)
unique(twn$`Animal Type`)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
mutate(annual_percentage = sum(year))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
mutate(annual_percentage = sum(total))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total)/n(outcome))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total)/nrow(outcome))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total)/distinct(outcome))
animals %>%
distinct(outcome)
animals %>%
n(outcome)
animals %>%
nrow(outcome)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = sum(total)/n_distinct(outcome))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*n_distinct(outcome))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total))
animals %>%
filter(year == 2002)
animals %>%
filter(year == 2002, outcome == "Currently In Care")
animals %>%
filter(year == 2002, outcome == "Currently In Care") %>%
sum(region_total)
animals %>%
filter(year == 2002, outcome == "Currently In Care")
animals %>%
filter(year == 2002, outcome == "Currently In Care") %>%
summarise(sum(region_total))
animals %>%
filter(year == 2002) %>%
summarise(sum(region_total))
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) %>%
geom_line()
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line()
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Annual Percentages for Reclaimed and Rehomed",
x = "Year",
y = "Percent")
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Annual Percentages for Reclaimed and Rehomed",
x = "Year",
y = "Percent")
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Annual Percentages for Reclaimed, Rehomed and Euthanized",
x = "Year",
y = "Percent")
animals %>%
filter(animal_type %in% c("Cat", "Dog")) %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Annual Percentages for Reclaimed, Rehomed and Euthanized",
x = "Year",
y = "Percent")
View(animals)
animals %>%
filter(animal_type %in% c("Cats", "Dogs")) %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Annual Percentages for Reclaimed, Rehomed and Euthanized",
x = "Year",
y = "Percent")
filter(animal_type %in% c("Cats", "Dogs")) %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized"))
animals %>%
filter(animal_type %in% c("Cats", "Dogs")) %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100)
animals %>%
group_by(outcome, year) %>%
summarise(total = sum(region_total, na.rm = T)) %>%
group_by(year) %>%
mutate(annual_percentage = total/sum(total)*100) %>%
filter(outcome %in% c("Rehomed", "Reclaimed", "Euthanized")) %>%
ggplot(aes(year, annual_percentage, colour = outcome)) +
geom_line() +
labs(title = "Percentages for Reclaimed, Rehomed and Euthanized",
x = "Year",
y = "Percent")
